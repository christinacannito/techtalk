<!DOCTYPE html>
<html ng-app="hour">
<head>
	<title>Build a site in an hour</title>
	<meta name="description" content="Tutorial on how to build a site in an hour.">
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<link rel="stylesheet" type="text/css" href="css/styles.css">
	<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css" integrity="sha384-1q8mTJOASx8j1Au+a5WDVnPi2lkFfwwEAa8hDDdjZlpLegxhjVME1fgjWPGmkzs7" crossorigin="anonymous">
	<script src="https://use.fontawesome.com/8aa36c7c3c.js"></script>
	<script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.5.6/angular.min.js"></script>
	<script src="js/resources/angular-route.min.js"></script>
</head>
<body ng-controller="mainCtrl">

	<main>
		<section>
			<h1>From zero to "I built that"</h1>
			<p>How to build a website in an hour</p>
		</section>
	</main>
	<div class="downArrow" ng-click="showDivs()">
		<i class="fa fa-angle-double-down" aria-hidden="true"></i>
	</div> <!-- on click show other divs -->

	<section ng-show="show" class="nextSteps">
		<article class="tutorial" ng-click="showTutorial()">
			<p>Tutorial</p>
		</article>
		<article class="resources" ng-click="showResources()">
			<p>Resources</p>
		</article>
	</section>

	<section ng-show="tut" class="tut">
		<h2>Let's begin</h2>
		<p>Before we start typing a line of code we will cover a few basic topics.</p>
		<p>Here are some keywords that you should start to become firmilar with.</p>
		<ul>
			<li>Text editor:
				<ul>
					<li>You need to write your code in a text editor</li>
					<li>The default text editor for window is <a href="https://en.wikipedia.org/wiki/Notepad%2B%2B" target="_blank">Notepad++</a></li>
					<li>The default text editor for mac is <a href="https://en.wikipedia.org/wiki/TextEdit" target="_blank">Textedit</a></li>
					<li>You can also download and install <a href="https://www.sublimetext.com/" target="_blank">Sublime Text</a></li>
				</ul>
			</li>
			<li><a href="https://en.wikipedia.org/wiki/Syntax_(programming_languages)" target="_blank">Syntax</a> - </li>
			<li><a href="https://www.theguardian.com/help/insideguardian/2009/sep/28/blogpost" target="_blank">Frontend</a> - programming that has to do with anything the user can see. The colors, images, and animations to a page is done by a frontend developer.</li>
			<li><a href="http://blog.teamtreehouse.com/i-dont-speak-your-language-frontend-vs-backend" target="_blank">Backend</a> - programming that the user can not view. For example programming the database. Programming on how information goes from a form to being stored into a database. (A frontend developer would code the visual aspect of the form while the backend developer would capture the data.)</li>
		</ul>
		<p>If you want to continue to build website then you should take the time to install either Sublime Text or another text editor you really like. A text editor like Sublime Text has many great features that the default text editors don't offer. (Such as syntax highlighting and autocompletion.)</p>

		<h2>Communication</h2>
		<p>We are going to focus on frontend development. There are two languages we are going to focus on for frontend development.</p>
		<ul>
			<li><a href="http://www.w3schools.com/html/default.asp" target="_blank">HTML</a> - Hyper Text Markup Language. This will be used for the layout of our site, providing layout and structure. </li>
			<li><a href="http://www.w3schools.com/css/default.asp" target="_blank">CSS</a> - Cascading Style Sheet. This will add the styles to our site. Using CSS you can adjust the colors, fonts, images, adjust the widths and heights of elements and so much much. (With CSS3 you can even do animations!)</li>
			<!-- <li><a href="http://www.w3schools.com/js/default.asp" target="_blank">JavaScript</a> - </li> -->
		</ul>
		<p>With these two languages we are going to create our website!</p>
		<p>*JavaScript is another language used in frontend developement, but we can cover that language in part two :)</p>

		<article class="sample">
			<h2>Taking a look at what we will be building <span><i class="fa fa-binoculars" aria-hidden="true"></i></span></h2>
			<img src="images/sample_page_sm.jpg" width="" height="" alt="completed sample page thumbnail">
			<p>This might look very complicated, but we will work on each section of this site one at a time.</p>
		</article>	

		<article class="startFiles">
			<h2>Starter files</h2>
			<p>Since we are going to try to have everyone get a site up in one hour I am going to give you some starter files and folders. You can download the starter files here at my <a href="https://github.com/christinacannito/talkstarterfiles" target="_blank">github</a> account.</p>
			<p>Once you have downloaded the files you will unzip them and place them on your desktop. Then you will drag the entire folder onto your text editor. </p>
			<img src="images/step_01.png" alt="step 1 opening the sample folders and files"> 
			<p>This is what you should see when you drag the folder into your text editor. Now if you click on the index.htm file you will see there is some code already there to help you get started. </p>
			<img src="images/step_02.png" width="300" height="100" alt="step 2 looking at the index file">
			<p>What is written in this file can be thought of as the structure of our site.</p>
			<!-- when they open up the starter files you should go over them a little bit -->
		</article>

		<article class="structure">
			<h2>The structure - HTML</h2>
			<p>Before we add our colors or any images we need to create the structure of our site. For this we are going to use HTML. HTML is made up of keywords/tags that tell the browser how to interpret what you have written. For example you want to tell the browser that a piece of text is a heading. For a heading you would use one of 6 heading tags written as <xmp><h1>, <h2>, <h3>, <h4>, <h5>, <h6></xmp> When you load your file to the browser the browser will see these tags and know that these are heading tags therefore they will display them more prominently than a paragraph tag. There are many tags that will be used to describe the text on a page as well as the containers they sit in. <a href="http://www.w3schools.com/html/html_intro.asp" target="_blank">HTML basics</a> I have written out the structure of our site so you can get firmilar with HTML tags by seeing them in action! Let's start with the basics and look at text.</p>
			<!-- will start by just having people fill in the blanks -->
		</article>
		
		<article class="structureSteps">
			<h2>Structure steps</h2>
			<h3>The HEAD tag</h3>
			<p>First thing we need to do is give our page a title. The title of our page goes in the head tag and is what gets displayed in the tab in the browser.</p>
			<img src="images/title.png" width="600" height="300" alt="writting out the title">
			<p>What you should see then when you view the html in the browser is this: </p>
			<img src="images/title_in_tab.png" alt="title in tab">
			<p>Anything that is written inside this head tag is not going to be displayed on our webpage. Inside our head tag we put all of our links to our styles sheets (CSS), JavaScript, and we put the <a href="http://www.w3schools.com/tags/tag_meta.asp" target="_blank">meta tags</a>. "Meta tag provides metadata about the HTML document. Metadata will not be displayed on the page, but will be machine parsable." - W3Schools An example would be the meta keywords, we would include a meta description here. Anyone viewing the site would not be able to see the meta description on the page, but the description can be found by search engines.</p>
			
			<h3>The BODY tag</h3>
			<p>Now that we have looked at the HEAD tag we are going to move through the BODY of the HTML document. Anything that is written in the body is going to be viewable to the user. Let's fill out some of this content inside the BODY tag.</p>
			<img src="images/h1_tag_p_tag.png" width="600" height="300" alt="filled in h1 tag and paragraph tag">
			<p>The <a href="http://www.w3schools.com/tags/tag_hn.asp" target="_blank">H1 tag</a> means that this is the strongest header tag and they decrease in importantance as you go up in numbers for the heading tags. You can only have one H1 tag on your page, because search engines expect to see only one to a page. You can think of h1 tags as the name of a newspaper and all the other header tags are headings of articles.</p>
			<p>We also filled out a paragraph tag. The paragraph tag is also used to signify text on a page, but this is used to show...paragraphs! You can put a lot of text inside of paragraph tags.</p>

			<h4>Buttons</h4>
			<p>I created some <a href="http://www.w3schools.com/tags/tag_div.asp" target="_blank">divs</a> (divs can be throught of as containers) for you to write a p tag and then name your buttons.</p>
			<img src="images/buttons.png" width="600" height="300" alt="buttons with the p tags filled in">
			<p>Then when you view this page in the browser you should now see the following:</p>
			<img src="images/sample_site_buttons.png" width="600" height="300" alt="sample site so far with ">

			<h4>Text</h4>
			<p>Now we are going to put in the rest of the text onto our page! Anywhere you see a <a href="http://www.w3schools.com/html/html_comments.asp" target="_blank">comment</a> that says "TEXT" you are going to write out the tag that is there and input some...text.</p>
			<p>For example if you see: <xmp><!-- <h2> portfolio header TEXT --></xmp> write a heading 2 tag with the name you would like for that heading. <xmp><h2>Some sample work and content</h2></xmp> Once you are done your HTML file should look like this: </p>
			<img src="images/html_file_with_text.png" width="600" height="300"  alt="html file with all the text">
			<p>When you open this HTML file in the browser you should see this:</p>
			<img src="images/site_text_added.png" width="600" height="300" alt="site with all the text added">

			<h4>Links</h4>
			<p><a href="http://www.w3schools.com/html/html_links.asp" target="_blank">Links</a> can be used to either link to another website, another HTML file in your site, another part of your same HTML file, other file types (for example a PDF) or images. You write links with the a tag <xmp><a href="https://www.google.com/" target="_blank"></a></xmp> Inside the href <a href="http://www.w3schools.com/html/html_attributes.asp" target="_blank">attribute</a> you write what you would like to link to. You add a target attribute with the value of "_blank" if you would like that link to open up into a new tab. If you do not want the link to open in a new tab in the browser you don't need to include this attribute. There is only one place I left blank for you to fill in your own link and that is for your email. Email links are just slightly different than links you would write to another page. Here is an example: <xmp><a href="mailto:ccannito@flycommunications.com" class="emailLink">ccannito@flycommunications.com</a></xmp> Inside the "href" attribute it says "mailto" and then the name of the email address you would like to go to. Find the comment in your starter index file that says "EMAIL as LINK" and create the link to your email address.</p>
			<p>When you are done the code should look like this: </p>
			<img src="images/email_link.png" width="400" height="500" alt="email link code">
			<p>When you view your HTML in the browser you should see this:</p>
			<img src="images/email_link_result.png" width="400" height="400" alt="email link result">
			<p>When you click on the link you should see your computer's default email account open up and a new email template for you address to the email address you provided.</p>

			<h4>Images</h4>
			<p>We linked to an email address, now lets link to some images. Images have their own tag which is written as <xmp><img src=""></xmp> A link uses the attribute "href" to say where you would like the link to go whereas the image tag uses the "src" attribute. The way you link to images that are stored locally on your computer is by writing the path to that file. We will write one together and then you will write in all the rest.</p>
			<img src="images/image_link.png" width="500" height="400" alt="image link example" width="500" height="300">
			<p>When you view this in the browser though you see that the image is huge!</p> 
			<img src="images/before_image_attributes.png" width="500" height="400" alt="before the image attributes are added">
			<p>We need to add some attributes to this tag so that it fits properly on the page. For image tags you can add "width" and "height" attributes. We are also going to add in an <a href="http://www.w3schools.com/tags/att_img_alt.asp">"alt"</a> tag which is very important as it is used for people that need screen readers. Screen readers are for people that are visually impared. Let's update our code to add those in.</p>
			<xmp><img src="images/header_img.JPG" width="90%" height="100%" alt="inside of the Guggenheim Museum"></xmp>
			<p>This is how the image appears afterwards:</p>
			<img src="images/after_attributes_added.png" width="500" height="400" alt="after the image attributes are added">
			<p>Now go through and anywhere you see a comment that says "IMAGE" link to an image.</p>
			<p>When you are done your code should look like this: </p>
			<img src="images/images_done_code.png" alt="code done for images" width="500" height="400">

			<p>Then when you view your updated in the browser it should look like this: </p>
			<img src="images/images_results.png" alt="images added to the site" width="500" height="400">

			<h4>Font Awesome Icons</h4>

			<h4>iFrame</h4>
			<p>The last tag that we are going to add to our HTML is the <a href="http://www.w3schools.com/tags/tag_iframe.asp" target="_blank">iframe</a>. An iframe can be thought of as a window to another site into your HTML page. For this example we are going to use an iframe to show our location with google maps and show a video from youtube. An iframe is written as: <xmp><iframe src=""></iframe></xmp> You will put the site you would like to include in the iframe in the source "src" attribute.</p>
			<p>In the sample files I have a video link and a link to the Fly Communications location on google maps. Find the two places in your starter file where the iframes should go and insert the iframes with their correct links in the source.</p>

			<p>Here is what the finished code should look like:</p>
			<img src="images/iframe_in_code.png" alt="iframes added into the code" width="600" height="300">

			<p>Here is how the site looks with the iframes added in:</p>
			<img src="images/iframe_in_browser.png" alt="result of the iframes added into the code" width="500" height="400">

			<h4>CSS</h4>
			<p>Now that we have the whole layout of our site done and that we have added our content we can start to add some styles!</p>
			

		</article>
	</section>

	<section ng-show="res" class="res">
		<p>here is the full resources section</p>
	</section>

	<section ng-view>
	</section> <!-- this will load one of the two templates -->

	<script type="text/javascript" src="js/main.js"></script>
	<script type="text/javascript" src="js/controllers/mainCtrl.js"></script>
</body>
</html>